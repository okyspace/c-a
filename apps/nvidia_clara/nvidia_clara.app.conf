id: "nvidia-clara"
version: "1.1.0"
name: "Nvidia Clara"
provider: "ClearML"
description: """NVIDIA Clara is a healthcare application framework.
              Using ClearML allows to easily, quickly and with no setup
              train models on model data and leverage NVIDIA CLARA's framework power"""
icon: "apps_assets/nvidia_clara/app-nvidia-clara@2x.png"
no_info_html: "apps_assets/nvidia_clara/index.html"

task {
  # task fields to use when creating the application task
  # will probably be a dump from an existing task by the creator of the app
  script {
    repository: "https://bitbucket.org/seematics/clearml_apps.git"
    entry_point: "train_clara.py"
    working_dir: "apps/nvidia_clara"
    tag: ""
  }
  hyperparams {
    Args {
      dataset_task: ""
      arch: "UNet"
      env: "config/environment.json"
      log_config: "resources/log.config"
      write_train_stats: "False"
      labels_dir: "labelsTr"
      images_dir : "imagesTr"
      set: ""
    }
  },
  container {
    image: "nvcr.io/nvidia/clara-train-sdk:v4.0"
    arguments: "--ipc=host"
  }
}

wizard {
  entries: [
    {
        name: dataset_task
        title: Dataset Task ID
        info: """"The dataset used for training with Clara must be stored in ClearML using ClearML-Data.
                  Provide the dataset's Task ID. If no ID is provided, a task named `Example data` will be chosen"""
        type: string
        required: false
        target {
          field: hyperparams
          section: Args
          name: dataset_task
        }
    },
    {
      name: arch
      title: Model Architecture
      info: "The model's architecture to be trained"
      type: dropdown
      choices = ["UNet", "SegResNet"]
#              "AHNet",
#                 "DenseNet",
#                 "DenseNet121",
#                 "DenseNet169",
#                 "DenseNet201",
#                 "DenseNet264",
#                 "EfficientNet",
#                 "EfficientNetBN",
#                 "SegResNet",
#                 "SegResNetVAE",
#                 "SENet",
#                 "SEResNet50",
#                 "HighResNet",
#                 "DynUNet",
#                 "UNet",
#                 "BasicUNet",
#                 "VNet"]

      target {
        field: hyperparams
        section: Args
        name: arch
      }
    },
    {
      type: string
      name: mmar
      title: MMAR Root
      info: "Path to Training root folder (MMAR_ROOT)"
      default: "/workspace/clearml-nvidia-internal/clara"
      target {
        field: hyperparams
        section: Args
        name: mmar
      }
    },
    {
      type: string
      name: set
      title: Setting
      info: "A list of KEY=VALUE pairs"
      default: "['MMAR_CKPT_DIR=models/trn_base', 'DATASET_JSON=sampleData/dataset.json']"
      target {
        field: hyperparams
        section: Args
        name: set
      }
    },
    {
      name: queue
      title: Execution queue
      display: "Execution queue for Clara's training jobs. A ClearML Agent executing the job should listen to this queue"
      type: dropdown
      choices: {
        source: queue
        value_field: id
        display_field: name
      },
      target: "$queue"
    },
    {
      name: name
      title: Name
      type: string
      info: Clara Training instance name
      placeholder: "Nvidia Clara Training"
      required: false
      target: name
    },
    {
      type: multiline_text
      name: train
      title: Clara Configuration File
      info: """<a href="https://docs.nvidia.com/clara/tlt-mi_ea/clara-train-sdk-v4.0/nvmidl/mmar.html#config-train-json">Training configuration</a>file,
             leave empty for using the architecture's default configuration"""
      required: false
      target {
        field: configuration
        format: json  # dump a json into the configuration item, where the value from this entry will be placed under the "field" key
        name: train
      }
    },
    {
      type: multiline_text
      name: env
      title: Clara Environment File
      info: """<a href="https://docs.nvidia.com/clara/tlt-mi_ea/clara-train-sdk-v4.0/nvmidl/mmar.html#environment-json">Training environment</a> file,
                  leave empty for using default environment configuration"""
      required: false
      target {
      field: configuration
        format: json  # dump a json into the configuration item, where the value from this entry will be placed under the "field" key
        name: env
      }
    }
  ]
}

dashboard {
  lines: [
    {
      contents: [
        {
          title: "Training scalars"
          type: scalar-histogram
          metric: "val_mean_dice"
          variant: []
        },
        {
          title: "Training scalars"
          type: scalar-histogram
          metric: "val_acc"
          variant: [ ]
        },
      ]
    },
    {
      contents: [
        {
          title: "Training scalars"
          type: scalar-histogram
          metric: "train_loss"
          variant: []
        },
        {
          title: "Training scalars"
          type: scalar-histogram
          metric: "train_acc"
          variant: [ ]
        },
      ],
    },
    {
      contents: [
        {
          title: "Models Table"
          type: plot
          metric: "Models Table"
          variant: "Clara Training Models"
        },
      ],
    },
    {
      contents: [
        {
          title: "Console Log"
            type: log
        }
      ]
    },
  ]
}
