id: "hpo-app"
version: "1.1.0"
name: "Hyperparameter Optimization"
provider: "ClearML"
description: """The Hyperparameter Optimization Application finds a set of parameters that optimizes a metric for a specific existing training Task (Initial Task).
                A “BaseTask” is an existing training Task in the ClearML System.
                The “Initial Task” will be cloned, modified and then optimized according to a chosen objective, optimization strategy, parameters, and time limit.
                See more details on ClearML-Agents <a href="https://clear.ml/docs/latest/docs/fundamentals/agents_and_queues" target="_blank">here</a>
                Each cloned Task is sent for execution to a remote machine running ClearML Agent via the selected queue. The Application provides a dashboard to track the optimization process, status and results.
            """
icon: "apps_assets/hpo/app-hpo@2x.png"
badges: []
details_page: "task"
no_info_html: "apps_assets/hpo/index.html"

task {
  # task fields to use when creating the application task
  # will probably be a dump from an existing task by the creator of the app
  script {
    repository: "https://bitbucket.org/seematics/clearml_apps.git"
    entry_point: "hpo_app.py"
    working_dir: "apps/hpo/"
    tag: ""
  }
  hyperparams {
    Args {
      max_concurrent: 1,
      min_iter_per_job:,
      max_iter_per_job:,
    }
  }
}

wizard {
  entries: [
    {
      type: string
      name: task_id
      title: Initial Task to Optimize
      info: """Provide an <b>existing</b> Task ID to optimize (To obtain the Task ID, choose a Task that exists in ClearML and click on the ID button on the top of the Task card).
             The HPO process clones and modified the initial task, then sends the cloned experiments for execution,
             each cloned Task represents a single optimization experiment with a unique set of hyperparameters"""
      target {
        field: hyperparams
        section: Args
        name: base_task_id
      }
    },
    {
        type: group
        name: opt_conf
        title: Optimization Configuration
        collapsible: true
        item_template: [
        {
          type: dropdown
          name: strategy
          title: Optimization Method
          choices: ["Bandit-Based Bayesian Optimization w/ TPE (With Optuna)", "HyperBand Bayesian Optimization", "Random", "Grid"]
          default: "Optuna"
          target {
            field: hyperparams
            section: Args
            name: strategy
          }
        },
        {
          type: string
          name: metric_title
          title: Optimization Objective Metric's Title
          info: """Title of metric to optimize. The optimization process will try to maximize \ minimize the specified metric.
                   The chosen Task must report this metric (e.g. use Tensorboard with “title/series”)."""
          placeholder: "e.g. validation"
          target {
            field: hyperparams
            section: Args
            name: metric_title
          }
        },
        {
          type: string
          name: metric_series
          title: Optimization Objective Metric's Series
          info: "Metric series (variant) to optimize"
          placeholder: "e.g. accuracy"
          target {
            field: hyperparams
            section: Args
            name: metric_series
          }
        },
        {
          type: dropdown
          name: metric_sign
          title: Optimization Objective Trend
          info: "Choose whether to optimize chosen metric for maximum or minimum value"
          radio: true
          choices: ["Max","Min"]
          target {
            field: hyperparams
            section: Args
            name: metric_sign
          }
        }
        ]
    },
    {
      type: dropdown
      name: queue
      title: Execution Queue
      info: """Execution queue to be used for the experiments (notice clearml-agents must be configured).
               See explanation on queues and agents <a href="https://clear.ml/docs/latest/docs/fundamentals/agents_and_queues" target="_blank">here</a>"""
      default: "default"
      required: false
      choices: {
        source: queue
        value_field: name
        display_field: name
      },
      target {
        field: hyperparams
        section: Args
        name: queue
      }
    },
    {
      type: list
      name: param_list
      title: Parameters To Optimize
      info: List of parameters to be optimized during this optimization instance
      min_items: 1
      collapsibleTitleTemplate: "${param_name}"
      target: {
        field: configuration
        name: params_list
        format: null
      }
      item_template: [
        {
          name: param_type
          title: Type
          placeholder: "Args/learning_rate"
          type: dropdown
          radio: true
          choices: ["Uniform","Discrete"]
          default: "Uniform"
        },
        {
          name: param_name
          title: Name
          info: "Parameter name including parameter section name (e.g. Args/learning_rate)"
          placeholder: "Args/learning_rate"
          type: string
        },
        {
          name: discrete_values
          title: Values
          info: "Comma separated values to test (e.g. 0.5, 5, 15.5). Supports integer, float and string"
          type: string
          placeholder: "0.01, 0.05, 0.08"
          conditional: {
            entries: [
              {
                name: param_type
                value: "Discrete"
              }
            ]
          }
        }
        {
          name: min_val
          title: Minimum Value
          type: string
          conditional: {
            entries: [
              {
                name: param_type
                value: "Uniform"
              }
            ]
          }
        },
        {
          name: max_val
          title: Maximum Value
          type: string
          conditional: {
            entries: [
              {
                name: param_type
                value: "Uniform"
              }
            ]
          }
        },
        {
          name: step_size
          title: Step Size
          type: string
          conditional: {
            entries: [
              {
                name: param_type
                value: "Uniform"
              }
            ]
          }
        }
      ]
    },
    {
      type: string
      name: name
      title: Optimization Job Title
      info: "Name this optimization instance for increased visibility."
      placeholder: "Hyperparameter Optimization Instance"
      required: false
      target: name
    },
    {
      type: dropdown
      autocomplete: true
      name: project
      title: Optimization Experiments Destination Project
      info: "The project in which optimization experiments will be saved into. Leave empty to use the Initial Task's folder for all the experiments created by the HPO."
      required: false
       choices {
            source: project
            value_field: name
            display_field: name
      }
      target {
      field: hyperparams
        section: Args
        name: project
      }
    },
    {
      type: integer
      name: max_concurrent
      title: Maximum Concurrent Experiments
      info: """The Optimization process creates multiple Optimization Experiments with different hyperparameters.
               Defines the Maximum number of concurrent optimization Experiments running in the system."""
      default: 1
      required: false
      target: {
        field: hyperparams
        section: Args
        name: max_concurrent
      }
    },
    {
        type: group
        name: adv_conf
        title: Advanced Configuration
        collapsible: true
        item_template: [
        {
          type: integer
          name: max_jobs
          title: Limit Total HPO Experiments
          info: "Maximum number of experiments created by the entire optimization process."
          default: 100
          required: false
          target {
            field: hyperparams
            section: Args
            name: max_jobs
          }
        },
        {
          type: integer
          name: save_top_k_exp
          title: Number of Top Experiments to Save
          info: "Number of best performing experiments to save after the optimization process is done, the rest are automatically archived."
          default: 10
          required: false
          target {
            field: hyperparams
            section: Args
            name: save_top_k_exp
          }
        },
        {
          type: integer
          name: time_per_job
          title: Limit Single Experiment Running Time (Minutes)
          info: "Time limit per optimization experiment. Experiments will be stopped after the specified time elapsed."
          default: 6000
          required: false
          target {
            field: hyperparams
            section: Args
            name: time_per_job
          }
        },
        {
          type: integer
          name: min_iter_per_job
          title: Minimal Number of Iterations Per Single Experiment
          info: """Some search methods, such as Optuna, stop underperforming experiments.
                   This is the minimum number of iterations per experiment before it can be stopped.
                   Iterations are based on the experiments' own reporting (for example, if experiments report every epoch, then iterations=epochs).
                   Must be a positive Integer"""
          default: 1
          range: [1,null]
          required: false
          target {
            field: hyperparams
            section: Args
            name: min_iter_per_job
          }
        },
        {
          type: integer
          name: max_iter_per_job
          title: Maximum Number of Iterations Per Single Experiment
          info: """Maximum iterations per experiment after which it will be stopped.
                   Iterations are based on the experiments' own reporting (for example, if experiments report every epoch, then iterations=epochs)"""
          default: 1000000
          required: false
          target {
            field: hyperparams
            section: Args
            name: max_iter_per_job
          }
        },
        {
          type: integer
          name: tot_time
          title: Limit Total Optimization Instance Time (Minutes)
          info: """Limit the entire Optimization process. When the time limit is reached, all optimization experiments are aborted and optimization-instance stops.
                   Leave empty to remove the time limit"""
          required: false
          target {
            field: hyperparams
            section: Args
            name: tot_time
          }
        },
        ]
    },
  ]
}

dashboard {
  lines: [
    {
      contents: [
        {
          title: "Optimization Metric"
          type: scalar-histogram
          metric: "${hyperparams.Args.combined_name.value}"
          variant: ["last reported","max"]
        },
        {
          title: "Optimization Objective"
          type: plot
          metric: "Optimization Objective"
          variant: "${hyperparams.Args.combined_name.value}"
        }
      ]
    },
    {
      contents: [
        {
          title: "Parallel Coordinates"
          type: plot
          metric: "Parallel Coordinates"
          variant: ""
        },
      ]
    },
    {
      contents: [
        {
          title: "Summary"
          type: plot
          metric: "summary"
          variant: "job"
        },
      ]
    },
    {
      contents: [
        {
          title: "Budget"
          type: scalar-histogram
          metric: "remaining budget"
          variant: ["iterations %","jobs %"]
        },
        {
          title: "Resources"
          type: scalar-histogram
          metric: "resources"
          variant: ["pendings tasks","queue workers","running tasks"]
        },

      ]
    }
  ]
}
